// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/route-registrar/healthchecker"
)

type FakeHealthChecker struct {
	CheckStub        func(string) (bool, error)
	checkMutex       sync.RWMutex
	checkArgsForCall []struct {
		arg1 string
	}
	checkReturns struct {
		result1 bool
		result2 error
	}
}

func (fake *FakeHealthChecker) Check(arg1 string) (bool, error) {
	fake.checkMutex.Lock()
	fake.checkArgsForCall = append(fake.checkArgsForCall, struct {
		arg1 string
	}{arg1})
	fake.checkMutex.Unlock()
	if fake.CheckStub != nil {
		return fake.CheckStub(arg1)
	} else {
		return fake.checkReturns.result1, fake.checkReturns.result2
	}
}

func (fake *FakeHealthChecker) CheckCallCount() int {
	fake.checkMutex.RLock()
	defer fake.checkMutex.RUnlock()
	return len(fake.checkArgsForCall)
}

func (fake *FakeHealthChecker) CheckArgsForCall(i int) string {
	fake.checkMutex.RLock()
	defer fake.checkMutex.RUnlock()
	return fake.checkArgsForCall[i].arg1
}

func (fake *FakeHealthChecker) CheckReturns(result1 bool, result2 error) {
	fake.CheckStub = nil
	fake.checkReturns = struct {
		result1 bool
		result2 error
	}{result1, result2}
}

var _ healthchecker.HealthChecker = new(FakeHealthChecker)
